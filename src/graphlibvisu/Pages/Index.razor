@page "/"
@using graphlibvisu.Data
@inject FileSystemLoader fs_loader
@inject IJSRuntime JS



<h1>GRAPHLIB - INTERACTIVE VISUALISATION</h1>


<div class="alchemy" id="alchemy"></div>




<h1>Load example graphs</h1>

<p>Please select a graph to load from the list below</p>

@if (graphs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>TITLE</th>
                <th>TYPE</th>
                <th>OPEN</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var g in graphs)
            {
                <tr>
                    <td>@g.filename</td>

                    <td>@g.type</td>
                    <td>
                        <a class="btn btn-primary" @onclick="load_graph" role="button">OPEN</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    private GraphLoadingItem[] graphs;

    protected override async Task OnInitializedAsync()
    {
        graphs = await FileSystemLoader.GetGraphLoadingItem();


    }



    private async Task load_graph()
    {
        string? _fs = null;
        if (_fs == null)
        {
            _fs = "Graph1.txt";
        }
        GraphLoadingItem[] fss = await FileSystemLoader.GetGraphLoadingItem();
        bool is_in = false;
        foreach (GraphLoadingItem it in fss)
        {
            if (it.filename == _fs)
            {
                is_in = true;
                break;
            }
        }

        if (!is_in)
        {
            await JS.InvokeVoidAsync("show_error", "invalid load file:" + _fs);
            return;
        }


        //FINALLY LOAD FILE

        string json_graph = FileSystemLoader.LoadGraphToJSONString(_fs);
        await JS.InvokeVoidAsync("create_alchemy_visualisation", json_graph);
    }

}







